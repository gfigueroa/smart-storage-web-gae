/*
Copyright (c) 2011, 智慧人科技服務股份有限公司 (Smart Personalized Service Technology, Inc.) 
All rights reserved.
*/

package util;

import java.util.HashMap;

/**
 * Utility class for storing terminologies in different languages 
 * for the web server pages.
 * 
 */

public class Dictionary {
	
	public static enum Language {
		ENGLISH, CHINESE
	}
	
	private HashMap<String, Term> terms;
	
	/**
	 * Private constructor prevents instantiation from other classes.
	 */
	private Dictionary() {
		terms = new HashMap<String, Term>();
		loadTerms();
	}
	
	/**
	 * Get an instance of the Dictionary class.
	 * @return an instance of Dictionary
	 */
	public static Dictionary getInstance() {
		return DictionaryHolder.instance;
	}
	
	/**
	 * DictionaryHolder is loaded on the first execution of 
	 * Dictionary.getInstance() or the first access to 
	 * Dictionary.INSTANCE, not before.
	 */
	private static class DictionaryHolder {
		public static final Dictionary instance = new Dictionary();
	}
	
	/**
	 * Loads all the terms to be used by the dictionary.
	 */
	private void loadTerms() {
		terms.put("Good bye", new Term("Good Bye", "再見"));
		terms.put("Hello", new Term("Hello", "你好"));
	}

	/**
	 * Obtains the translation of this English term
	 * into the language given as parameter.
	 * @param englishTerm
	 * 			: the term in English to be translated
	 * @param language
	 * 			: the language desired for the translation
	 * @return the translation of this English term into the 
	 * 			desired language
	 */
	public String translate(String englishTerm, Language language) {
		
		Term term = terms.get(englishTerm);
		if (term == null) {
			return "";
		}
		
		switch (language) {
			case ENGLISH:
				return term.englishTerm;
			case CHINESE:
				return term.chineseTerm;
			default:
				return "";	
		}
	}
}
